#!/bin/bash
iniFile="$HOME/.h_server/.ini"
iniPasswdFile="$HOME/.h_server/.password"
iniDir="$HOME/.h_server"
iniPriFile="$HOME/.h_server/.ssh-pri"
iniEnPriFile="$HOME/.h_server/.en-ssh-pri"
FILE_PASSWORD=""
TEXT_INI=""

function createPri() {
	expect -c "
		spawn ssh-keygen -t rsa -C ssh@alliscoder.com -f ${iniPriFile};
		expect {
			\"Enter passphrase\" { send \"\n\r\";exp_continue }
			\"Enter same passphrase\" { send \"\n\r\" }
		}
		interact
	"
}

function encryptIni() {
	# 待加密文件
	iniContentPath=$1
	# 加密写入的文件
	iniEncryptIniPath=$2
	# 密码
	pass=$3
	openssl enc -aes-128-cbc -e -in ${iniContentPath}  -pass pass:${pass} -out ${iniEncryptIniPath}
}
function decryptIni() {
	iniDecryptIniPath=$1
	pass=$2
	echo -e "$(openssl enc -aes-128-cbc -d -in ${iniDecryptIniPath} -pass pass:${pass} 2>/dev/null)"
}
function checkPasswdFile() {
	if [ ! -d "$iniDir" ]
	then
		mkdir $iniDir;chmod 700 $iniDir;
	fi

	if [ ! -f "$iniFile" ]
	then
		touch $iniFile;chmod 600 $iniFile;
	fi

	if [ ! -f "${iniPasswdFile}" ]
	then
		echo -e "\033[31m没有找到加解密密码\033[0m"
		while [ "${FILE_PASSWORD}" == "" ]
		do
			echo -e "\033[32m请输入加解密密码:\033[0m"
			read FILE_PASSWORD
		done
		touch ${iniPasswdFile};chmod 600 $iniPasswdFile;
		echo "${FILE_PASSWORD}" > ${iniPasswdFile}
	fi
	FILE_PASSWORD="$(cat ${iniPasswdFile})"
	if [ ! -f "${iniPriFile}" ]
	then
		if [ ! -f "${iniEnPriFile}" ]
			createPri
		then
			decryptIni ${iniEnPriFile} ${FILE_PASSWORD} > ${iniPriFile}	
		fi
	fi
	TEXT_INI="$(decryptIni ${iniFile} ${FILE_PASSWORD})"
	TEXT_INI=$(echo -e "${TEXT_INI}"|sed '/^$/d')
}
function listMeth(){
	if [ ! -f "$iniFile" ]
	then
		echo -e  "\033[31m没有添加任何机器\033[0m"
	else
		if [ "${TEXT_INI}" == ""  ]
		then
			echo -e  "\033[31m没有添加任何机器\033[0m"
		else
			showList
		fi
	fi
}
function showList(){
	echo -e "${TEXT_INI}"|awk -F : '{print("--------------\r\n主机名:"$1"\r\nhost:"$2"\r\n端口号:"$3"\r\n默认用户名:"$4"\r\n描述、备注:"$5)}'
}
function addMeth(){
	NAME=""
	while [ "$NAME" == "" ]
	do
		echo -e "\033[32m请输入机器名称name(唯一名称,不要含空格):\033[0m"
		read NAME
	done

	HOST=""
	while [ "$HOST" == "" ]
	do
		echo -e "\033[32m请输入host:\033[0m"
		read HOST
	done

	echo -e "\033[32m请输入端口号(不输入直接回车默认为22):\033[0m"
	read PORT
	if [ "$PORT" == "" ]
	then
		PORT=22
	fi
	echo -e "\033[32m请输入默认用户名(不输入直接回车默认为root):\033[0m"
	read USER
	if [ "$USER" == "" ]
	then
		USER="root"
	fi
	echo -e "\033[32m请输入机器描述(不要有英文冒号或空格，这里可以注上备注):\033[0m"
	read DESC
	echo -e "\033[32m请输入机器登录密码(不需要密码或者不想保存密码，直接回车):\033[0m"
	read PASSWD
	# 创建临时存储明文的文件
	tmpIniPath="/tmp/.h_ini.bak"
	echo -e "${TEXT_INI}" > ${tmpIniPath}
	echo "$NAME:$HOST:$PORT:$USER:$DESC:$PASSWD" >> ${tmpIniPath}
	encryptIni ${tmpIniPath} ${iniFile} ${FILE_PASSWORD}
	rm -rf ${tmpIniPath}
}
function editMeth(){
	name="$1"
	while [ "$name" == "" ]
	do
		echo -e "\033[32m请输入要修改的机器名称name:\033[0m"
		read name
	done

	eval $(echo -e "${TEXT_INI}"|awk -F : '$1 ~ /^'$name'$/ {print "host="$2";port="$3";user="$4";desc="$5";passwd="$6}')
	if [ "$host" == "" ]
	then
		echo -e "\033[31m机器不存在\033[0m"
		return -1
	else
		echo $host,$port,$user,$desc
	fi

	echo -e  "\033[32m请输入新的host(不更改直接回车,原host为"$host"):\033[0m"
	read HOST
	if [ "$HOST" == "" ]
	then
		HOST="$host"
	fi

	echo -e "\033[32m请输入新的端口号(不更改直接回车,原端口号为"$port"):\033[0m"
	read PORT
	if [ "$PORT" == "" ]
	then
		PORT="$port"
	fi

	echo -e "\033[32m请输入新的默认用户名(不更改直接回车,原默认用户名为"$user"):\033[0m"
	read USER
	if [ "$USER" == "" ]
	then
		USER="$user"
	fi

	echo -e "\033[32m请输入新的机器描述(不更改直接回车,原机器描述为"$desc"):\033[0m"
	read DESC
	if [ "$DESC" == "" ]
	then
		DESC="$desc"
	fi

	echo -e "\033[32m请输入新的机器密码(不更改直接回车,原机器密码为"$passwd"):\033[0m"
	read PASSWD
	if [ "$PASSWD" == "" ]
	then
		PASSWD="$passwd"
	fi
	# 创建临时存储明文的文件
	tmpIniPath="/tmp/.h_ini.bak"
	echo -e "${TEXT_INI}"|sed "s/^"${name}":.*$/"$name":"$HOST":"$PORT":"$USER":"$DESC":"$PASSWD"/" > ${tmpIniPath}
	encryptIni ${tmpIniPath} ${iniFile} ${FILE_PASSWORD}
	if [ "$?" == "0" ]
	then
		echo -e "\033[32m修改成功\033[0m"
	else
		echo -e "\033[31m修改失败\033[0m"
	fi
	rm -rf ${tmpIniPath}
}
function deleteMeth(){
	name="$1"
	while [ "$name" == "" ]
	do
		echo -e "\033[32m请输入要删除的机器名称name:\033[0m"
		read name
	done

	flag=$(echo -e "${TEXT_INI}"|awk -F : '$1 ~ /^'$name'$/ {print "1"}')
	if [ "$flag" == "" ]
	then
		echo -e "\033[32m该机器不存在\033[0m"
	else
		# 创建临时存储明文的文件
		tmpIniPath="/tmp/.h_ini.bak"
		echo -e "${TEXT_INI}"|sed '/^'$name":/d"  > ${tmpIniPath}
		encryptIni ${tmpIniPath} ${iniFile} ${FILE_PASSWORD}
		if [ "$?" == "0" ]
		then
			echo -e  "\033[32m删除成功\033[0m"
		else
			echo -e "\033[31m删除失败\033[0m"
		fi
		rm -rf ${tmpIniPath}
	fi
}
function goMeth(){
	name="$1"
	while [ "$name" == "" ]
	do
		echo -e "\033[32m请输入要跳转的机器名称name:\033[0m"
		echo -e "${TEXT_INI}"|awk -F : '{print $1} END{print "---------"}'
		read name
	done
	eval $(echo -e "${TEXT_INI}"|awk -F : '$1 ~ /^'$name'$/ {print "host="$2";port="$3";user="$4";desc="$5";passwd="$6}')

	if [ "$host" == "" ]
	then
		echo -e "\033[31m机器不存在\033[0m"
		return -1
	else
		if [ "$2" == 'sftp' ]
		then
			sshStr='sftp'
		elif [ "$2" == 'debug' ]
		then
            if [ "$4" != "" -a "$5" != "" ]
            then
                sshStr='ssh -R $4:localhost:$5 '
            else
			    sshStr='ssh -R 9002:localhost:9002 '
            fi
		else
			sshStr="ssh"
		fi
		if [ "$3" != "" ]
		then
		 	user="$3"
		fi
		expect -c "
			spawn $sshStr ${user}@${host} -p ${port};
			expect {
				\"yes/no\" { send \"yes\r\";exp_continue }
				\"*assword\" { send \"$passwd\r\" }
			}
			interact
		"
	fi

}
function tcpdumpMeth(){
	name="$1"
	while [ "$name" == "" ]
	do
		echo -e "\033[32m请输入要跳转的机器名称name:\033[0m"
		echo -e "${TEXT_INI}"|awk -F : '{print $1} END{print "---------"}'
		read name
	done
	eval $(echo -e "${TEXT_INI}"|awk -F : '$1 ~ /^'$name'$/ {print "host="$2";port="$3";user="$4";desc="$5";passwd="$6}')

	if [ "$host" == "" ]
	then
		echo -e "\033[31m机器不存在\033[0m"
		return -1
	else
		if [ "$2" != "" ]
		then
			user="$2"
		fi
	        ssh ${user}@${host} -p ${port}  'sudo tcpdump -i any -s0 -nnn -U not port 22  -w - '|/Applications/Wireshark.app/Contents/MacOS/Wireshark -k -i - ;
	fi

}
function scpMeth(){
	scpStr="scp"
	serverLink=""
	if [[ "$1" = 'download' ]]
	then
		serverLink=$2
	elif [[ "$1" = 'upload' ]]
	then
		serverLink=$3
	fi
	eval $(echo -e "${TEXT_INI}"|awk -F : '$1 ~ /^'$serverLink'$/ {print "host="$2";port="$3";user="$4";desc="$5";passwd="$6}')
	if [ "$host" == "" ]
	then
		echo -e "\033[31m机器不存在\033[0m"
		return -1
	else
		if [ "$5" != "" ]
		then
			user="$5"
		fi
		serverLink=$user"@"$host
		if [[ "$1" = 'download' ]]
		then
			expect -c "
				spawn scp -P ${port} ${serverLink}:$3 $4
				expect {
					\"*password\" { send \"$passwd\r\" }
				}
				interact

			"
		elif [[ "$1" = 'upload' ]]
		then
			expect -c "
				spawn scp -P ${port} $2 ${serverLink}:$4
				expect {
					\"*password\" { send \"$passwd\r\" }
				}
				interact
			"
		fi
	fi
}
function helpMeth(){
	case "$1"  in
		list)
			echo -e "\033[32m命令:h_server list.\t\t查看已经存在的机器详细信息.\033[0m" ;;
		add)
			echo -e "\033[32m命令:h_server add.\t\t添加服务器,按提示添加服务器信息\033[0m" ;;
		edit)
			echo -e "\033[32m命令:h_server edit [name].\t\t编辑服务器,可以直接加机器名称,也可以根据提示输入机器名\033[0m" ;;
		delete)
			echo -e "\033[32m命令:h_server delete [name].\t\t删除服务器,可以直接加机器名称,也可以根据提示输入机器名\033[0m" ;;
		go)
			echo -e "\033[32m命令:h_server go [name] [meth] [user].\t\t跳转到服务器,有三种方式,ssh(默认),debug,sftp.\033[0m" ;;
		tcpdump)
			echo -e "\033[32m命令:h_server tcpdump [name] [user].\t\t在mac上通过ssh对服务器进行实时抓包\033[0m" ;;
		upload)
			echo -e "\033[32m命令:h_server upload [本地文件地址] [服务器名] [存放文件的远程服务器地址] [其他用户]\033[0m" ;;
		download)
			echo -e "\033[32m命令:h_server scp download [服务器名] [远程服务器文件地址] [本地存放文件地址] [其他用户]\033[0m" ;;
		*)
			echo -e "\033[32m请查看详细命令,命令有add,list,edit,delete,go,download,upload\033[0m" ;;
	esac
}

function iniMeth() {
	m="$1"
	if [ "${m}" == "" ]
	then
		echo -e "\033[31m请选择加密还是解密,可输入参数为de:解密;en:加密\033[0m"
		return -1
	elif [[ "${m}" != "de" && "${m}" != "en" ]]
	then
		echo -e "\033[31m未知参数：${m},可输入参数为de:解密;en:加密\033[0m"
		return -1
	fi
	srcPath="$2"
	if [[ "${srcPath}" == "" || ! -f "${srcPath}"  ]]
	then
		echo -e "\033[31m源文件地址不能为空且需存在,请检查文件路径是否正确\033[0m"
		return -1
	fi
	destPath="$3"
	if [ "${destPath}" == "" ]
	then
		echo -e "\033[31m目标文件不能为空\033[0m"
		return -1
	fi
	tmpPd="$4"
	if [ "${tmpPd}" == "" ]
	then
		echo -e "\033[31m密码不能为空\033[0m"
		return -1
	fi
	if [ "${m}" == "en" ]
	then
		encryptIni ${srcPath} ${destPath} ${tmpPd}
	else
		decryptIni ${srcPath} ${tmpPd} > ${destPath}
	fi
}

checkPasswdFile
case "$1" in
	add)
		addMeth ;;	#添加服务器
	list)
		listMeth ;;	#查看服务器列表
	edit)
		editMeth $2 ;; #修改服务器
	delete)
		deleteMeth $2 ;; #删除服务器
	go)
		goMeth $2 $3 $4 $5 $6 ;; #ssh跳到服务器上
	tcpdump)
		tcpdumpMeth $2 $3 ;; #mac通过ssh使用wireshark抓包
	upload)
		scpMeth upload $2 $3 $4 $5;; #上传下载服务器
	download)
		scpMeth download $2 $3 $4 $5;; #上传下载服务器
	ini)
		iniMeth $2 $3 $4 $5;; # 配置文件的加解密
	help)
		helpMeth $2 ;; #命令帮助
	*)
		echo -e "\033[31mHelp :h_server [add|list|tcpdump|ini|edit|delete|go|upload|download]\033[0m" ;;
esac
