#!/bin/bash
iniFileName="ini"
iniFile="$HOME/.h_server/.${iniFileName}"
tmpIniPath="${iniFile}.bak"
iniPasswdFile="$HOME/.h_server/.password"
iniDir="$HOME/.h_server"
iniPriFileName="ssh-pri"
iniEnPriFileName="en-ssh-pri"
iniPriFile="$HOME/.h_server/.${iniPriFileName}"
iniEnPriFile="$HOME/.h_server/.${iniEnPriFileName}"
FILE_PASSWORD=""
TEXT_INI=""

function createPri() {
	expect -c "
		spawn ssh-keygen -t rsa -C ssh@alliscoder.com -f ${iniPriFile};
		expect {
			\"Enter passphrase\" { send \"\n\r\";exp_continue }
			\"Enter same passphrase\" { send \"\n\r\" }
		}
		interact
	"
}

function encryptIni() {
	# 待加密文件
	iniContentPath=$1
	# 加密写入的文件
	iniEncryptIniPath=$2
	# 密码
	pass=$3
	openssl enc -aes-128-cbc -e -in ${iniContentPath}  -pass pass:${pass} -out ${iniEncryptIniPath} -md sha256
}
function decryptIni() {
	iniDecryptIniPath=$1
	pass=$2
	echo -e "$(openssl enc -aes-128-cbc -d -in ${iniDecryptIniPath} -pass pass:${pass} -md sha256 2>/dev/null)"
}
function checkPasswdFile() {
	if [ ! -d "$iniDir" ]
	then
		mkdir $iniDir;chmod 700 $iniDir;
	fi

	if [ ! -f "$iniFile" ]
	then
		touch $iniFile;chmod 600 $iniFile;
	fi

	if [ ! -f "${iniPasswdFile}" ]
	then
		echo -e "\033[31m没有找到加解密密码\033[0m"
		while [ "${FILE_PASSWORD}" == "" ]
		do
			echo -e "\033[32m请输入加解密密码:\033[0m"
			read FILE_PASSWORD
		done
		touch ${iniPasswdFile};chmod 600 $iniPasswdFile;
		echo "${FILE_PASSWORD}" > ${iniPasswdFile}
	fi
	FILE_PASSWORD="$(cat ${iniPasswdFile})"
	if [ ! -f "${iniPriFile}" ]
	then
		if [ ! -f "${iniEnPriFile}" ]
		then
			createPri
		else
			decryptIni ${iniEnPriFile} ${FILE_PASSWORD} > ${iniPriFile}
		fi
		chmod 600 ${iniPriFile}
	fi
	TEXT_INI="$(decryptIni ${iniFile} ${FILE_PASSWORD})"
	TEXT_INI=$(echo -e "${TEXT_INI}"|sed '/^$/d')
	TEXT_INI_WITH_NO=""
	n=1
	for i in ${TEXT_INI}; do
		TEXT_INI_WITH_NO="${TEXT_INI_WITH_NO}\n${n}:${i}"
		n=$(expr ${n} + 1)
	done
	TEXT_INI=$(echo -e "${TEXT_INI_WITH_NO}"|sed '/^$/d')
}
function listMeth(){
	if [ ! -f "$iniFile" ]
	then
		echo -e  "\033[31m没有添加任何机器\033[0m"
	else
		if [ "${TEXT_INI}" == ""  ]
		then
			echo -e  "\033[31m没有添加任何机器\033[0m"
		else
			showList $1
		fi
	fi
}
function showList(){
	if [ "$1"  == "detail" ]
	then
		echo -e "${TEXT_INI}"|awk -F : '{print("\033[32m--------------\r\n序号:"$1"\r\n主机名:"$2"\r\nhost:"$3"\r\n端口号:"$4"\r\n默认用户名:"$5"\r\n描述、备注:"$6"\033[0m")}'
	else
		echo -e "${TEXT_INI}"|awk -F : '{print("\033[32m"$1"-"$2"("$3":"$4")\033[0m")}'
	fi
}

function deleteIniNo() {
	filePath="$1"
	if [[ "$(uname -a)" =~ "Darwin" ]]
	then
		sed -i "" 's/^[0-9]*://g' ${filePath}
	else
		sed -i 's/^[0-9]*://g' ${filePath}
	fi
}

function addMeth(){
	NAME=""
	while [ "$NAME" == "" ]
	do
		echo -e "\033[32m请输入机器名称name(唯一名称,不要含空格):\033[0m"
		read NAME
	done

	HOST=""
	while [ "$HOST" == "" ]
	do
		echo -e "\033[32m请输入host:\033[0m"
		read HOST
	done

	echo -e "\033[32m请输入端口号(不输入直接回车默认为22):\033[0m"
	read PORT
	if [ "$PORT" == "" ]
	then
		PORT=22
	fi
	echo -e "\033[32m请输入默认用户名(不输入直接回车默认为root):\033[0m"
	read USER
	if [ "$USER" == "" ]
	then
		USER="root"
	fi
	echo -e "\033[32m请输入机器描述(不要有英文冒号或空格，这里可以注上备注):\033[0m"
	read DESC
	echo -e "\033[32m请输入机器登录密码(不需要密码或者不想保存密码，直接回车):\033[0m"
	read PASSWD
	# 创建临时存储明文的文件
	echo -e "${TEXT_INI}" > ${tmpIniPath}
	deleteIniNo ${tmpIniPath}
	echo "$NAME:$HOST:$PORT:$USER:$DESC:$PASSWD" >> ${tmpIniPath}
	encryptIni ${tmpIniPath} ${iniFile} ${FILE_PASSWORD}
	rm -rf ${tmpIniPath}
	echo -e "\033[32m添加完成\033[0m"
}



function editMeth(){
	no="$1"
	while [ "${no}" == "" ]
	do
		echo -e "\033[32m请输入要修改的机器序号:\033[0m"
		read no
	done

	eval $(echo -e "${TEXT_INI}"|awk -F : '$1 ~ /^'${no}'$/ {print "name="$2";host="$3";port="$4";user="$5";desc="$6";passwd="$7}')
	if [ "$host" == "" ]
	then
		echo -e "\033[31m机器不存在\033[0m"
		return -1
	else
		echo $name,$host,$port,$user,$desc
	fi

	echo -e  "\033[32m请输入新的name(不更改直接回车,原name为"$name"):\033[0m"
	read NAME
	if [ "$NAME" == "" ]
	then
		NAME="$name"
	fi

	echo -e  "\033[32m请输入新的host(不更改直接回车,原host为"$host"):\033[0m"
	read HOST
	if [ "$HOST" == "" ]
	then
		HOST="$host"
	fi

	echo -e "\033[32m请输入新的端口号(不更改直接回车,原端口号为"$port"):\033[0m"
	read PORT
	if [ "$PORT" == "" ]
	then
		PORT="$port"
	fi

	echo -e "\033[32m请输入新的默认用户名(不更改直接回车,原默认用户名为"$user"):\033[0m"
	read USER
	if [ "$USER" == "" ]
	then
		USER="$user"
	fi

	echo -e "\033[32m请输入新的机器描述(不更改直接回车,原机器描述为"$desc"):\033[0m"
	read DESC
	if [ "$DESC" == "" ]
	then
		DESC="$desc"
	fi

	echo -e "\033[32m请输入新的机器密码(不更改直接回车,原机器密码为"$passwd"):\033[0m"
	read PASSWD
	if [ "$PASSWD" == "" ]
	then
		PASSWD="$passwd"
	fi
	# 创建临时存储明文的文件
	echo -e "${TEXT_INI}"|sed "s/^"${no}":.*$/"$no":"$NAME":"$HOST":"$PORT":"$USER":"$DESC":"$PASSWD"/" > ${tmpIniPath}
	deleteIniNo ${tmpIniPath}
	encryptIni ${tmpIniPath} ${iniFile} ${FILE_PASSWORD}
	if [ "$?" == "0" ]
	then
		echo -e "\033[32m修改成功\033[0m"
	else
		echo -e "\033[31m修改失败\033[0m"
	fi
	rm -rf ${tmpIniPath}
}
function deleteMeth(){
	no="$1"
	while [ "$no" == "" ]
	do
		echo -e "\033[32m请输入要删除的机器序列号:\033[0m"
		read no
	done

	flag=$(echo -e "${TEXT_INI}"|awk -F : '$1 ~ /^'$no'$/ {print "1"}')
	if [ "$flag" == "" ]
	then
		echo -e "\033[32m该机器不存在\033[0m"
	else
		# 创建临时存储明文的文件
		echo -e "${TEXT_INI}"|sed '/^'$no":/d"  > ${tmpIniPath}
		deleteIniNo ${tmpIniPath}
		encryptIni ${tmpIniPath} ${iniFile} ${FILE_PASSWORD}
		if [ "$?" == "0" ]
		then
			echo -e  "\033[32m删除成功\033[0m"
		else
			echo -e "\033[31m删除失败\033[0m"
		fi
		rm -rf ${tmpIniPath}
	fi
}
function goMeth(){
	no="$1"
	while [ "$no" == "" ]
	do
		echo -e "\033[32m请输入要跳转的机器序列号:\033[0m"
		showList
		read no
	done
	eval $(echo -e "${TEXT_INI}"|awk -F : '$1 ~ /^'$no'$/ {print "name="$2";host="$3";port="$4";user="$5";desc="$6";passwd="$7}')

	if [ "$host" == "" ]
	then
		echo -e "\033[31m机器不存在\033[0m"
		return -1
	else
		if [ "$2" == 'sftp' ]
		then
			sshStr="sftp -i ${iniPriFile}"
		else
			sshStr="ssh -i ${iniPriFile}"
		fi
		if [ "$3" != "" ]
		then
		 	user="$3"
		fi
		expect -c "
			spawn $sshStr ${user}@${host} -p ${port};
			expect {
				\"yes/no\" { send \"yes\r\";exp_continue }
				\"*assword\" { send \"$passwd\r\";exp_continue }
				\"*\" { }
			}
			interact
		"
	fi

}
function goRootMeth(){
	no="$1"
	while [ "$no" == "" ]
	do
		echo -e "\033[32m请输入要跳转的机器序列号:\033[0m"
		showList
		read no
	done
	eval $(echo -e "${TEXT_INI}"|awk -F : '$1 ~ /^'$no'$/ {print "name="$2";host="$3";port="$4";user="$5";desc="$6";passwd="$7}')

	if [ "$host" == "" ]
	then
		echo -e "\033[31m机器不存在\033[0m"
		return -1
	else
		sshStr="ssh -i ${iniPriFile}"
		if [ "$2" != "" ]
		then
		 	user="$2"
		fi
		if [ "${name}" != "root" ]
		then
			expect -c "
				spawn $sshStr ${user}@${host} -p ${port};
				expect {
					\"yes/no\" { send \"yes\r\";exp_continue }
					\"*assword\" { send \"$passwd\r\";exp_continue }
					\"*Last login\" { send \"sudo -i\r\";exp_continue }
					\"*assword\" { send \"$passwd\r\";exp_continue }
					\"*\" { }
				}
				interact
			"
		else
			expect -c "
				spawn $sshStr ${user}@${host} -p ${port};
				expect {
					\"yes/no\" { send \"yes\r\";exp_continue }
					\"*assword\" { send \"$passwd\r\";exp_continue }
					\"*\" { }
				}
				interact
			"
		fi
	fi

}
function tcpdumpMeth(){
	no="$1"
	while [ "$no" == "" ]
	do
		echo -e "\033[32m请输入要跳转的机器序列号:\033[0m"
		echo -e "${TEXT_INI}"|awk -F : '{print $1} END{print "---------"}'
		read no
	done
	eval $(echo -e "${TEXT_INI}"|awk -F : '$1 ~ /^'$no'$/ {print "name="$2";host="$3";port="$4";user="$5";desc="$6";passwd="$7}')

	if [ "$host" == "" ]
	then
		echo -e "\033[31m机器不存在\033[0m"
		return -1
	else
		if [ "$2" != "" ]
		then
			user="$2"
		fi
	        ssh -i ${iniPriFile} ${user}@${host} -p ${port}  'sudo tcpdump -i any -s0 -nnn -U not port 22  -w - '|/Applications/Wireshark.app/Contents/MacOS/Wireshark -k -i - ;
	fi

}
function scpMeth(){
	scpStr="scp"
	serverLink=""
	if [[ "$1" == 'download' ]]
	then
		serverLink=$2
	elif [[ "$1" == 'upload' ]]
	then
		serverLink=$3
	fi
	eval $(echo -e "${TEXT_INI}"|awk -F : '$1 ~ /^'$serverLink'$/ {print "host="$3";port="$4";user="$5";desc="$6";passwd="$7}')
	if [ "$host" == "" ]
	then
		echo -e "\033[31m机器不存在\033[0m"
		return -1
	else
		if [ "$5" != "" ]
		then
			user="$5"
		fi
		serverLink=$user"@"$host
		if [[ "$1" == 'download' ]]
		then
			expect -c "
				spawn scp -i ${iniPriFile} -P ${port} ${serverLink}:$3 $4
				expect {
					\"*password\" { send \"$passwd\r\" }
				}
				interact

			"
		elif [[ "$1" == 'upload' ]]
		then
			expect -c "
				spawn scp -i ${iniPriFile} -P ${port} $2 ${serverLink}:$4
				expect {
					\"*password\" { send \"$passwd\r\" }
				}
				interact
			"
		fi
	fi
}

function iniMeth() {
	m="$1"
	if [ "${m}" == "" ]
	then
		echo -e "\033[31m请选择加密还是解密,可输入参数为de:解密;en:加密\033[0m"
		return -1
	elif [[ "${m}" != "de" && "${m}" != "en" ]]
	then
		echo -e "\033[31m未知参数：${m},可输入参数为de:解密;en:加密\033[0m"
		return -1
	fi
	srcPath="$3"
	if [[ "${srcPath}" == "" || ! -f "${srcPath}"  ]]
	then
		echo -e "\033[31m源文件地址:${srcPath},不能为空且需存在,请检查文件路径是否正确\033[0m"
		return -1
	fi
	destPath="$4"
	if [[ "${destPath}" == "" && "${m}" == "en" ]]
	then
		echo -e "\033[31m目标文件不能为空\033[0m"
		return -1
	fi
	tmpPd="$2"
	if [ "${tmpPd}" == "" ]
	then
		echo -e "\033[31m密码不能为空\033[0m"
		return -1
	fi
	if [ "${tmpPd}" == "self" ]
	then
		tmpPd=${FILE_PASSWORD}
	fi
	if [ "${m}" == "en" ]
	then
		encryptIni ${srcPath} ${destPath} ${tmpPd}
	else
		if [ "${destPath}" == ""  ]
		then
			decryptIni ${srcPath} ${tmpPd}
		else
			decryptIni ${srcPath} ${tmpPd} > ${destPath}
		fi
	fi
}

function exportMeth() {
	cp ${iniFile} `pwd`/${iniFileName}
	encryptIni ${iniPriFile} `pwd`/${iniEnPriFileName} ${FILE_PASSWORD}
}

function importMeth() {
	importPasswd="$1"
	while [ "${importPasswd}" == "" ]
	do
		echo -e "\033[32m请输入加密密码:\033[0m"
		read importPasswd
	done
	if [[ "${importPasswd}" == "self" ]]
	then
		importPasswd=${FILE_PASSWORD}
	fi
	echo "${importPasswd}" > ${iniPasswdFile}
	importIniFilePath="$2"	
	while [ "${importIniFilePath}" == "" ]
	do
		echo -e "\033[32m请输入加密配置文件路径:\033[0m"
		read importIniFilePath 
	done
	cat ${importIniFilePath} > ${iniFile}
	importPriFilePath="$3"
	if [[ "${importPriFilePath}" != "" ]]
	then
		cat ${importPriFilePath} > ${iniEnPriFile}
		rm -rf ${iniPriFile}*
	fi
}

function changePasswdMeth() {
	oldPasswd="$1"
	while [ "${oldPasswd}" == "" ]
	do
		echo -e "\033[32m请输入当前密码:\033[0m"
		read oldPasswd 
	done
	newPasswd="$2"
	while [ "${newPasswd}" == "" ]
	do
		echo -e "\033[32m请输入新密码:\033[0m"
		read newPasswd
	done
	decryTxt="$(decryptIni ${iniFile} ${oldPasswd})"
	echo -e "\033[32m当前密码解密后内容如下:\033[0m"
	echo -e "${decryTxt}"
	echo -e "\033[33m是否正常使用新密码进行加密(Y/n)\033[0m"
	read change_confirm
	if [[ "${change_confirm}" == "" || "${change_confirm}" == "Y" || "${change_confirm}" == "y" ]]
	then
		# 创建临时存储明文的文件
		decryptIni ${iniFile} ${oldPasswd} > ${tmpIniPath}
		encryptIni ${tmpIniPath} ${iniFile} ${newPasswd}
		echo ${newPasswd} > ${iniPasswdFile}
		echo -e "\033[32m密码修改成功\033[0m"
	else
		echo -e "\033[32m您已退出密码修改\033[0m"
		return 0
	fi

}

function helpMeth(){
	case "$1"  in
		list)
			echo -e "\033[32m命令:list [detail].\n\r\t\t查看已经存在的机器详细信息,带上detail参数则显示更详细信息.\033[0m" ;;
		add)
			echo -e "\033[32m命令:add.\n\r\t\t交互式添加服务器,按提示添加服务器信息\033[0m" ;;
		edit)
			echo -e "\033[32m命令:edit [{机器序号}].\n\r\t\t编辑服务器,可以直接加机器序号,也可以根据提示输入机器序号\033[0m" ;;
		delete)
			echo -e "\033[32m命令:delete [{机器序号}].\n\r\t\t删除服务器,可以直接加机器序号,也可以根据提示输入机器序号\033[0m" ;;
		go)
			echo -e "\033[32m命令:go [{机器序列号}] [{使用方式:ssh|sftp}] [{使用其他用户名}].\n\r\t\t登录到服务器,有三种方式,ssh(默认),sftp.\033[0m" ;;
		goroot)
			echo -e "\033[32m命令:goroot [{机器序列号}] [{使用其他用户名}].\n\r\t\t登录到服务器,并切换到root.\033[0m" ;;
		tcpdump)
			echo -e "\033[32m命令:tcpdump [{机器序列号}] [{使用其他用户名}].\n\r\t\t在mac上通过ssh对服务器进行实时抓包\033[0m" ;;
		upload)
			echo -e "\033[32m命令:upload {本地文件地址} {服务器序列号} {存放文件的远程服务器地址} [{使用其他用户名}]\n\r\t\t上传文件到指定服务器\033[0m" ;;
		download)
			echo -e "\033[32m命令:download {服务器序列号} {远程服务器文件地址} {本地存放文件地址} [{使用其他用户名}]\n\r\t\t从服务器上下载文件\033[0m" ;;
		encry)
			echo -e "\033[32m命令:encry {密码:self为特殊字符串,从密码密码文件中读取} {待加密文件地址} {加密文件地址}\n\r\t\t加密文件\033[0m" ;;
		decry)
			echo -e "\033[32m命令:decry {密码:self为特殊字符串,从密码密码文件中读取} {加密文件地址} [{明文文件地址:不填写则输出在界面}]\n\r\t\t解密文件\033[0m" ;;
		getPub)
			echo -e "\033[32m命令:getPub \n\r\t\t获取公钥\033[0m" ;;
		export)
			echo -e "\033[32m命令:export \n\r\t\t导出加密配置到当前文件夹,${iniFileName}为服务器配置,${iniEnPriFileName}为私钥文件\033[0m" ;;
		import)
			echo -e "\033[32m命令:import {密码:self为特殊字符串,从密码密码文件中读取} {加密配置文件} [{加密私钥文件}] \n\r\t\t导入配置\033[0m" ;;
		changePasswd)
			echo -e "\033[32m命令:changePasswd [{当前密码}] [{新密码}] \n\r\t\t更换加密密码\033[0m" ;;
		exit)
			echo -e "\033[33m输入exit或q直接退出\033[0m" ;;
		*)
			helpAll ;;
	esac
}

function exitMeth() {
	echo -e "\033[32m欢迎下次使用\033[0m"
	exit 0
}

function helpAll() {
	helpMeth add
	helpMeth list	
	helpMeth edit
	helpMeth delete
	helpMeth go
	helpMeth download
	helpMeth upload
	helpMeth tcpdump
	helpMeth encry
	helpMeth decry
	helpMeth getPub
	helpMeth export
	helpMeth import
	helpMeth changePasswd
	helpMeth exit
}

function h_server_main() {
	case "$1" in
		add)
			addMeth ;;	#添加服务器
		list)
			listMeth $2 ;;	#查看服务器列表
		edit)
			editMeth $2 ;; #修改服务器
		delete)
			deleteMeth $2 ;; #删除服务器
		go)
			goMeth $2 $3 $4 ;; #ssh跳到服务器上
		goroot)
			goRootMeth $2 $3 $4 ;; #ssh跳到服务器上并自动切到root
		tcpdump)
			tcpdumpMeth $2 $3 ;; #mac通过ssh使用wireshark抓包
		upload)
			scpMeth upload $2 $3 $4 $5;; #上传下载服务器
		download)
			scpMeth download $2 $3 $4 $5;; #上传下载服务器
		encry)  
			iniMeth en $2 $3 $4;; # 文件加密
		decry)
			iniMeth de $2 $3 $4;; # 文件解密
		help)
			helpMeth $2 ;; #命令帮助
		getPub)
			ssh-keygen -y -f ${iniPriFile} ;;
		export)
			exportMeth ;;
		import)
			importMeth $2 $3 $4 ;;
		changePasswd)
			changePasswdMeth $2 $3 ;;
		exit|q)
			exitMeth ;;
		*)
			echo -e "\033[31mHelp :h_server [add|list|edit|delete|go|download|upload|encry|decry|getPub|export|import|changePasswd]\033[0m" ;;
	esac
}

if [[ "$1" == ""  ]]
then
	helpAll
	while [ true ]
	do
		checkPasswdFile
		h_server_main list
		echo -e "\033[31m请输入指令:\033[0m"
		read h_command
		while [ "${h_command}" == "" ]
		do
			echo -e "\033[31m请输入指令:\033[0m"
			read h_command
		done
		h_server_main ${h_command}	
	done
	
else
	checkPasswdFile
	h_server_main $1 $2 $3 $4 $5
fi

